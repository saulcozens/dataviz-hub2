{"version":3,"sources":["webpack:///./src/components_images/events_background.jsx","webpack:///./src/components_events/upcomingEvents.jsx","webpack:///./src/components_events/pastEvents.jsx","webpack:///./src/pages/events.jsx"],"names":["BackgroundSection","className","children","query","render","data","imageData","desktop","childImageSharp","fluid","style","backgroundAttachment","UpcomingEvents","allEventbriteEvents","eventLimit","edges","legnth","map","node","description","text","length","substring","concat","fontFamily","transition","href","url","key","id","target","rel","src","logo","original","objectFit","objectPosition","name","start","local","online_event","venue","address","address_1","city","postal_code","PastEvents","pastEvent","background","frontmatter","to","fields","slug","title","date","events","eventBrite","useState","moment","format","currentDate","setDate","useEffect","keywords"],"mappings":"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","file":"component---src-pages-events-jsx-8f0888048e1f5874038b.js","sourcesContent":["import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport BackgroundImage from 'gatsby-background-image'\nimport PropTypes from 'prop-types'\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `useStaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `useStaticQuery`: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nconst BackgroundSection = ({className, children}) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        desktop: file(relativePath: { eq: \"events/chair.jpg\" }) {\n          childImageSharp {\n            fluid(quality: 70, maxWidth: 1920) {\n              ...GatsbyImageSharpFluid_noBase64\n            }\n          }\n        }\n      }\n    `}\n    render={data => {\n      // Set ImageData.\n      const imageData = data.desktop.childImageSharp.fluid\n      return (\n        <BackgroundImage\n        className={className}\n        fluid={imageData}\n        style={{backgroundAttachment: 'fixed'}}\n        >\n        {children}\n        </BackgroundImage>\n      )\n    }}\n  />\n)\n\nBackgroundSection.propTypes = {\n  className: PropTypes.any,\n  children: PropTypes.node,\n  style: PropTypes.any,\n}\n\nexport default BackgroundSection","import React from 'react'\nimport PropTypes from \"prop-types\"\nimport { FaMapMarkerAlt, FaClock } from \"react-icons/fa\"\n\n\nconst UpcomingEvents = ({allEventbriteEvents}) => {\n  var eventLimit = 0\n\n  if(allEventbriteEvents && (allEventbriteEvents.edges.legnth > 0)) {\n    return (\n      <> \n      {allEventbriteEvents.edges.map(({node}) => {\n        //moment(node.start.local, \"DD-MMMM-YYYY hh:mm\") >= moment() && \n        // Check if event's date is later than today's date, restrict number of events to 3\n        if(eventLimit < 4 ) {\n          eventLimit = eventLimit + 1\n          let description = node.description.text\n          if(description.length >= 130) {\n            description = description.substring(0, 130).concat(\" ...\")\n          }\n\n          return (\n            <a className=\"flex flex-wrap w-full overflow-y-hidden max-h-80 md:max-h-25 xl:max-h-20 shadow-lg hover:shadow-2xl bg-white my-1 text-gray-700 group border-solid \" style={{fontFamily: \"TUoS Blake\", transition: \".5s ease\"}} href={node.url} key={node.id} target=\"_blank\" rel=\"noopener noreferrer\">\n              <img className=\"w-full md:w-3/12 overflow-hidden self-center md:min-h-25 xl:min-h-15\" src={node.logo.original.url} style={{objectFit: \"cover\", objectPosition: \"center\"}} />\n              <div className=\"w-full md:w-9/12 py-4 px-4\">\n                <p className=\"font-semibold text-lg text-gray-900 group-hover:text-highlight_2\">{node.name.text}</p>\n                <p className=\"text-gray-500 hidden md:flex lg:flex xl:flex leading-tight text-sm\">{description}</p>\n                <p className=\"flex pt-4 text-sm\"><FaClock className=\"mr-1\" />{node.start.local}</p>\n                \n                <div className=\"flex flex-wrap\">\n                  <div className=\"w-full sm:w-full md:w-5/6 lg:w-5/6 xl:w-5/6 text-sm\">\n                    <p className=\"flex\">{node.online_event && (<FaMapMarkerAlt className=\"mr-1 mt-1\" />)} {node.online_event && (\"Online Event\") }</p>\n                    <p className=\"flex\">\n                      {node.venue && ( <FaMapMarkerAlt className=\"mr-1 mt-1\" /> )} \n                      {node.venue && node.venue.name && (node.venue.name + \", \")} \n                      {node.venue && node.venue.address.address_1 && (node.venue.address.address_1 + \", \")} \n                      {node.venue && node.venue.address.city && (node.venue.address.city + \", \")}\n                      {node.venue && node.venue.address.postal_code && (node.venue.address.postal_code)}\n                    </p>\n                  </div>\n                  <div className=\"flex flex-wrap w-full sm:w-full md:w-1/6 lg:w-1/6 xl:w-1/6 content-center justify-center\">\n                    <button href={node.url} target=\"_blank\" rel=\"noopener noreferrer\" className=\"hidden group-hover:flex shadow-sm -mt-4 py-1 px-3 text-md bg-gray-800 text-white hover:bg-highlight_2\">\n                      Register\n                    </button>\n                  </div>\n                </div>\n\n              </div>\n            </a> \n          )\n        }\n      })}\n      </>\n    )\n  } else {\n    return (\n      <div className=\"mt-16 text-blue-800\">No upcoming events can be found, please come back later.</div>\n    )\n  }\n}\n\nexport default UpcomingEvents\n\nUpcomingEvents.propTypes = {\n  allEventbriteEvents: PropTypes.any,\n}\n\n","import React from 'react'\nimport PropTypes from \"prop-types\"\nimport { Link } from \"gatsby\"\n\nconst PastEvents = ({pastEvent}) => {\n  \n  return (\n    <div className=\"w-full sm:w-full md:w-full lg:w-3/12 xl:w-3/12 2xl:w-2/12 text-gray-100 px-6 lg:mt-16 pb-16 lg:py-6 border-t-4 border-gray-800 min-h-50\" style={{background: \"rgba(0,0,0,.6)\", }}>\n      <h1 className=\"text-xl pt-2 pb-6 font-semibold\">Past Events</h1>\n      \n      {pastEvent.edges.map(({ node }) => {\n\n        let description = node.frontmatter.description ? node.frontmatter.description : \"\"\n        if(description.length >= 85){\n          description = description.substring(0, 85).concat(\" ...\")\n        }\n\n        return (\n          <div className=\"flex flex-wrap transition duration-500 p-3 w-full overflow-auto shadow-md hover:shadow-xl bg-white group border-t-2 border-solid border-r-8 border-gray-700 hover:border-r-8 hover:border-highlight_2\" key={node.id}>\n            <Link to={node.fields.slug}>\n            <p style={{ fontFamily: \"TUoS Stephenson\",}} className=\"font-bold text-sm text-black\">{node.frontmatter.title}</p>\n            <p className=\"text-gray-700 hidden md:flex text-sm leading-4\">{description}</p>\n            <p className=\"mt-2 text-sm text-black\">{node.frontmatter.date}</p>\n            </Link>\n          </div>\n        )\n\n      })} \n      \n    </div>\n  )\n\n\n  \n}\n\nexport default PastEvents\n\nPastEvents.propTypes = {\n  pastEvent: PropTypes.any,\n}\n\n","import React, {useState, useEffect} from \"react\"\nimport { graphql } from \"gatsby\"\nimport SEO from \"../components/seo\"\nimport Header from \"../components/header\"\nimport Footer from \"../components/footer\"\nimport BackgroundSection from \"../components_images/events_background\"\nimport PropTypes from \"prop-types\"\nimport UpcomingEvents from \"../components_events/upcomingEvents\"\nimport PastEvents from \"../components_events/pastEvents\"\nimport moment from \"moment\"\n\n\nconst events = ({data: {eventBrite, pastEvent}}) => {\n\n  const [currentDate, setDate] = useState(moment().format('ddd DD MMMM YYYY, hh:mm A'));\n  useEffect(() => {\n    setDate(moment().format('ddd DD MMMM YYYY, hh:mm A'))\n  }, [])\n\n  return (\n    <>\n      <SEO \n        title=\"Events\" \n        keywords={[\"the university of sheffield\", \"data visualisation\", \"data visualisation hub\", \"research\", \"dataviz events\", \"dataviz.shef\"]} \n      />\n      <Header />\n     \n\n      <BackgroundSection className=\"flex flex-wrap flex-grow-0 items-center justify-center content-center min-h-100\">\n        <div className=\"w-full lg:w-8/12 px-12 lg:pt-6 pt-16 text-black lg:my-24 pb-16 overflow-auto border-t-8 border-red-700 min-h-70\" style={{background: \"rgba(255,255,255,.95)\", }}>\n          <h1 className=\"inline-block text-2xl font-semibold\">Upcoming Events</h1>\n          <div className=\"text-gray-900 mb-8\" >Today: {currentDate}</div>\n          <UpcomingEvents allEventbriteEvents={eventBrite} />\n        </div>\n        \n        <PastEvents pastEvent={pastEvent} />    \n  \n      </BackgroundSection>\n      \n      <Footer />\n    </>\n  )\n}\n\nexport default events\n\nevents.propTypes = {\n\t\tdata: PropTypes.any\n  }\n  \n  \n\nexport const query = graphql`\n  query {\n    eventBrite: \n    allEventbriteEvents(limit: 4, sort: {fields: start___local, order: ASC}, filter: {id: {ne: \"777\"}}) {\n      ...EventbriteEventsEdge\n    }\n\n    pastEvent: \n    allMdx(limit: 5, filter: {frontmatter: {category: {in: \"Events\"}, hide: {ne: \"true\"} }}, sort: {order: DESC, fields: frontmatter___date}) {\n      edges {\n        node {\n          fields {\n            slug\n            readingTime {\n              text\n            }\n          }\n          id\n          frontmatter {\n            date(formatString: \"dddd, DD MMMM YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  \n  }\n`;\n\n\n\n\n"],"sourceRoot":""}