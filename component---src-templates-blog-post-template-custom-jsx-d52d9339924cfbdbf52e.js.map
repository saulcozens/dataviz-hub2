{"version":3,"sources":["webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/core-js/modules/es6.reflect.construct.js","webpack:///./src/templates/blogPostTemplate_custom.jsx","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js"],"names":["MDXRenderer","require","module","$export","create","aFunction","anObject","isObject","fails","bind","rConstruct","Reflect","construct","NEW_TARGET_BUG","F","ARGS_BUG","S","Target","args","newTarget","arguments","length","$args","push","apply","proto","prototype","instance","Object","result","Function","call","blogPostTemplate_custom","mdx","data","pageContext","prev","next","title","frontmatter","keywords","className","body","to","node","fields","slug","query","React","useMDXComponents","useMDXScope","scope","components","children","props","mdxComponents","mdxScope","End","fullScope","keys","values","key","fn"],"mappings":"gFAMA,IAAMA,EAAcC,EAApB,QAEAC,UAAiB,CACfF,YAAaA,I,qBCRf,IAAIG,EAAU,EAAQ,QAClBC,EAAS,EAAQ,QACjBC,EAAY,EAAQ,QACpBC,EAAW,EAAQ,QACnBC,EAAW,EAAQ,QACnBC,EAAQ,EAAQ,QAChBC,EAAO,EAAQ,QACfC,GAAc,EAAQ,QAAaC,SAAW,IAAIC,UAIlDC,EAAiBL,GAAM,WACzB,SAASM,KACT,QAASJ,GAAW,cAA6B,GAAII,aAAcA,MAEjEC,GAAYP,GAAM,WACpBE,GAAW,kBAGbP,EAAQA,EAAQa,EAAIb,EAAQW,GAAKD,GAAkBE,GAAW,UAAW,CACvEH,UAAW,SAAmBK,EAAQC,GACpCb,EAAUY,GACVX,EAASY,GACT,IAAIC,EAAYC,UAAUC,OAAS,EAAIJ,EAASZ,EAAUe,UAAU,IACpE,GAAIL,IAAaF,EAAgB,OAAOH,EAAWO,EAAQC,EAAMC,GACjE,GAAIF,GAAUE,EAAW,CAEvB,OAAQD,EAAKG,QACX,KAAK,EAAG,OAAO,IAAIJ,EACnB,KAAK,EAAG,OAAO,IAAIA,EAAOC,EAAK,IAC/B,KAAK,EAAG,OAAO,IAAID,EAAOC,EAAK,GAAIA,EAAK,IACxC,KAAK,EAAG,OAAO,IAAID,EAAOC,EAAK,GAAIA,EAAK,GAAIA,EAAK,IACjD,KAAK,EAAG,OAAO,IAAID,EAAOC,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAG5D,IAAII,EAAQ,CAAC,MAEb,OADAA,EAAMC,KAAKC,MAAMF,EAAOJ,GACjB,IAAKT,EAAKe,MAAMP,EAAQK,IAGjC,IAAIG,EAAQN,EAAUO,UAClBC,EAAWvB,EAAOG,EAASkB,GAASA,EAAQG,OAAOF,WACnDG,EAASC,SAASN,MAAMO,KAAKd,EAAQU,EAAUT,GACnD,OAAOX,EAASsB,GAAUA,EAASF,M,kCC5CvC,0KAQe,SAASK,EAAT,GAAkE,IAAvBC,EAAsB,EAA9BC,KAAQD,IAAOE,EAAe,EAAfA,YACtDC,EAAcD,EAAdC,KAAMC,EAAQF,EAARE,KAEb,OACE,kBAAC,IAAD,KACA,kBAAC,IAAD,CACAC,MAAOL,EAAIM,YAAYD,MACvBE,SAAU,CAAC,8BAA+B,qBAAsB,yBAA0B,WAAY,UAItG,yBAAKC,UAAU,yCACb,kBAAC,cAAD,KACE,kBAAC,cAAD,KAAcR,EAAIS,QAItB,yBAAKD,UAAU,mBACZL,GACC,kBAAC,OAAD,CAAMO,GAAIP,EAAKQ,KAAKC,OAAOC,MACxB,IADH,IACSV,EAAKQ,KAAKL,YAAYD,OAGhCD,GACC,kBAAC,OAAD,CAAMM,GAAIN,EAAKO,KAAKC,OAAOC,MACxBT,EAAKO,KAAKL,YAAYD,MADzB,IACiC,OAcpC,IAAMS,EAAK,c,gyDC/ClB,IAAMC,EAAQ/C,EAAd,Q,EACkCA,EAAQ,QAAlCgD,E,EAAAA,iBAAkBhB,E,EAAAA,IAClBiB,EAAgBjD,EAAQ,QAAxBiD,YAERhD,UAAiB,SAAqB,GAKlC,IAJFiD,EAIC,EAJDA,MACAC,EAGC,EAHDA,WACAC,EAEC,EAFDA,SACGC,E,oIACF,sCACKC,EAAgBN,EAAtB,GACMO,EAAWN,EAFhB,GAKKO,EAAMT,EAAA,SAAc,WACxB,MACE,OAAO,KAGT,IAAMU,EAAS,GAGbV,MAHa,EAIbf,OAJF,GAQM0B,EAAO/B,YAAb,GACMgC,EAASD,EAAA,KAAS,SAAAE,GAAG,OAAIH,EAAJ,MAG3B,OAFQ,mCAAR,KAEOI,2BAAP,OACC,CAACT,EAlBJ,IAoBA,OAAOL,EAAA,mBAA2BI,WAAYG,GAA9C","file":"component---src-templates-blog-post-template-custom-jsx-d52d9339924cfbdbf52e.js","sourcesContent":["/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])\nvar $export = require('./_export');\nvar create = require('./_object-create');\nvar aFunction = require('./_a-function');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar fails = require('./_fails');\nvar bind = require('./_bind');\nvar rConstruct = (require('./_global').Reflect || {}).construct;\n\n// MS Edge supports only 2 arguments and argumentsList argument is optional\n// FF Nightly sets third argument as `new.target`, but does not create `this` from it\nvar NEW_TARGET_BUG = fails(function () {\n  function F() { /* empty */ }\n  return !(rConstruct(function () { /* empty */ }, [], F) instanceof F);\n});\nvar ARGS_BUG = !fails(function () {\n  rConstruct(function () { /* empty */ });\n});\n\n$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {\n  construct: function construct(Target, args /* , newTarget */) {\n    aFunction(Target);\n    anObject(args);\n    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);\n    if (ARGS_BUG && !NEW_TARGET_BUG) return rConstruct(Target, args, newTarget);\n    if (Target == newTarget) {\n      // w/o altered newTarget, optimization for 0-4 arguments\n      switch (args.length) {\n        case 0: return new Target();\n        case 1: return new Target(args[0]);\n        case 2: return new Target(args[0], args[1]);\n        case 3: return new Target(args[0], args[1], args[2]);\n        case 4: return new Target(args[0], args[1], args[2], args[3]);\n      }\n      // w/o altered newTarget, lot of arguments case\n      var $args = [null];\n      $args.push.apply($args, args);\n      return new (bind.apply(Target, $args))();\n    }\n    // with altered newTarget, not support built-in constructors\n    var proto = newTarget.prototype;\n    var instance = create(isObject(proto) ? proto : Object.prototype);\n    var result = Function.apply.call(Target, instance, args);\n    return isObject(result) ? result : instance;\n  }\n});\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport { MDXProvider } from \"@mdx-js/react\"\r\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\r\nimport { graphql, Link } from \"gatsby\"\r\n\r\nexport default function blogPostTemplate_custom({ data: { mdx }, pageContext }) {\r\n    const {prev, next} = pageContext  \r\n\r\n    return (\r\n      <Layout>\r\n      <SEO \r\n      title={mdx.frontmatter.title} \r\n      keywords={[\"the university of sheffield\", \"data visualisation\", \"data visualisation hub\", \"research\", \"blog\"]} \r\n      />\r\n\r\n      \r\n      <div className=\"justify-center mx-auto text-2xl pb-24\">\r\n        <MDXProvider>\r\n          <MDXRenderer>{mdx.body}</MDXRenderer>\r\n        </MDXProvider>\r\n      </div>\r\n      \r\n      <div className=\"flex text-black\">\r\n        {prev && (\r\n          <Link to={prev.node.fields.slug}>\r\n            {'<'} {prev.node.frontmatter.title}\r\n          </Link>\r\n        )}\r\n        {next && (\r\n          <Link to={next.node.fields.slug}>\r\n            {next.node.frontmatter.title} {'>'}\r\n          </Link>\r\n        )}\r\n      </div>\r\n\r\n      </Layout>\r\n    )\r\n}\r\n\r\nblogPostTemplate_custom.propTypes = {\r\n  data: PropTypes.any,\r\n  pageContext: PropTypes.any,\r\n}\r\n\r\nexport const query = graphql`\r\n  query BlogPostQuery_custom($id: String) {\r\n    mdx(id: { eq: $id }) {\r\n      id\r\n      body\r\n      frontmatter {\r\n        title\r\n        author\r\n        date(formatString: \"dddd Do MMMM YYYY\")\r\n      }\r\n    }\r\n  }\r\n`","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n"],"sourceRoot":""}