{"version":3,"sources":["webpack:///./src/components_images/blog_background.jsx","webpack:///./src/templates/blogTemplate.jsx","webpack:///./src/images/no_image.png"],"names":["BackgroundSection","className","children","query","render","data","imageData","desktop","childImageSharp","fluid","style","height","width","display","blogTemplate","allMdx","pageContext","title","keywords","edges","map","imagesrc","node","frontmatter","thumbnail","src","no_image_thumbnail","key","id","to","fields","slug","date","author","category","join","Array","from","length","numPages","item","i","index","link","currentPage","href","module","exports"],"mappings":"u7BAsDeA,EAtCW,SAAC,GAAD,IAAEC,EAAF,EAAEA,UAAWC,EAAb,EAAaA,SAAb,OACxB,kBAAC,cAAD,CACEC,MAAK,aAWLC,OAAQ,SAAAC,GAEN,IAAMC,EAAYD,EAAKE,QAAQC,gBAAgBC,MAC/C,OACE,kBAAC,IAAD,CACAR,UAAWA,EACXQ,MAAOH,EACPI,MAAO,CACLC,OAAO,OACPC,MAAM,OACNC,QAAQ,SAGV,6BAAMX,KAzBZ,U,2DC+DaY,UAxEf,YAAwD,IAAzBC,EAAwB,EAA/BV,KAAOU,OAASC,EAAe,EAAfA,YAEvC,OACC,kBAAC,IAAD,KACC,kBAAC,IAAD,CACEC,MAAM,OACNC,SAAU,CAAC,8BAA+B,qBAAsB,yBAA0B,cAE5F,kBAAC,EAAD,CAAmBjB,UAAU,gFAC5B,yBAAKA,UAAU,0BACd,wBAAIA,UAAU,YAAd,QAA8B,8BAC9B,uBAAGA,UAAU,WAAb,4BAKF,yBAAKA,UAAU,0BACd,yBAAKA,UAAU,uBAEbc,EAAOI,MAAMC,KAAI,YAAe,IAC5BC,EADgBC,EAAW,EAAXA,KASpB,OALCD,EADEC,EAAKC,aAAeD,EAAMC,YAAYC,WAAaF,EAAKC,YAAYC,UAAUhB,gBACrEc,EAAKC,YAAYC,UAAUhB,gBAAgBC,MAAMgB,IAEjDC,IAIX,yBAAKC,IAAKL,EAAKM,IACd,yBAAKH,IAAKJ,IACV,kBAAC,OAAD,CAAMQ,GAAIP,EAAKQ,OAAOC,MACrB,4BAAKT,EAAKC,YAAYN,QAEvB,2BAAIK,EAAKC,YAAYS,MACrB,iCAAOV,EAAKC,YAAYU,QACxB,wCAAcX,EAAKC,YAAYW,SAASC,KAAK,OAC7C,kBAAC,OAAD,CAAMN,GAAIP,EAAKQ,OAAOC,MAAtB,gBACQ,iCAKX,4BACEK,MAAMC,KAAK,CAAEC,OAAQtB,EAAYuB,WAAYnB,KAAI,SAACoB,EAAMC,GACxD,IAAMC,EAAQD,EAAI,EACZE,EAAiB,IAAVD,EAAc,QAAd,cAAsCA,EAEnD,OACC,wBAAIf,IAAKe,GACP1B,EAAY4B,cAAgBF,EAC5B,8BAAOA,GAEP,uBAAGG,KAAMF,GAAOD,SASlB,yBAAKzC,UAAU,8CAURa,IAODX,EAAK,c,qBCvFnB2C,EAAOC,QAAU,IAA0B","file":"component---src-templates-blog-template-jsx-42e090c0130da3475abc.js","sourcesContent":["import React from \"react\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\nimport BackgroundImage from 'gatsby-background-image'\r\nimport PropTypes from 'prop-types'\r\n\r\n/*\r\n * This component is built using `gatsby-image` to automatically serve optimized\r\n * images with lazy loading and reduced file sizes. The image is loaded using a\r\n * `useStaticQuery`, which allows us to load the image from directly within this\r\n * component, rather than having to pass the image data down from pages.\r\n *\r\n * For more information, see the docs:\r\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\r\n * - `useStaticQuery`: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nconst BackgroundSection = ({className, children}) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query {\r\n        desktop: file(relativePath: { eq: \"blog_b.jpg\" }) {\r\n          childImageSharp {\r\n            fluid(quality: 100, maxWidth: 1920) {\r\n              ...GatsbyImageSharpFluid_noBase64\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => {\r\n      // Set ImageData.\r\n      const imageData = data.desktop.childImageSharp.fluid\r\n      return (\r\n        <BackgroundImage\r\n        className={className}\r\n        fluid={imageData}\r\n        style={{\r\n          height: `70vh`,\r\n          width: `100%`,\r\n          display: `flex`,\r\n        }}\r\n        >\r\n        <div>{children}</div>\r\n        </BackgroundImage>\r\n      )\r\n    }}\r\n  />\r\n)\r\n\r\nBackgroundSection.propTypes = {\r\n  className: PropTypes.string,\r\n  children: PropTypes.node,\r\n}\r\n\r\nexport default BackgroundSection","import React from \"react\"\r\nimport { graphql, Link } from \"gatsby\"\r\nimport Layout from \"../components/layout\"\r\nimport PropTypes from \"prop-types\"\r\nimport SEO from \"../components/seo\"\r\nimport BackgroundSection from \"../components_images/blog_background\";\r\nimport no_image_thumbnail from \"../images/no_image.png\"\r\n\r\nfunction blogTemplate({ data: {allMdx}, pageContext }) {\r\n\r\n\treturn (\r\n\t\t<Layout>\r\n\t\t\t<SEO \r\n\t\t\t\t\ttitle=\"Blog\" \r\n\t\t\t\t\tkeywords={[\"the university of sheffield\", \"data visualisation\", \"data visualisation hub\", \"research\"]} \r\n\t\t\t/>\r\n\t\t\t<BackgroundSection className=\"flex flex-wrap justify-center self-center content-center items-center m-auto\">\r\n\t\t\t\t<div className=\"text-white text-center\">\r\n\t\t\t\t\t<h1 className=\"text-6xl\">Blog <br /></h1>\r\n\t\t\t\t\t<p className=\"text-sm\">scientia potentia est.</p>\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t</BackgroundSection>\r\n\r\n\t\t\t<div className=\"flex flex-wrap-reverse\">\r\n\t\t\t\t<div className=\"sm:w-3/4 px-10 py-8\">\r\n\r\n\t\t\t\t\t{allMdx.edges.map(({ node }) => {\r\n\t\t\t\t\t\tlet imagesrc\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(node.frontmatter && node. frontmatter.thumbnail && node.frontmatter.thumbnail.childImageSharp) {\r\n\t\t\t\t\t\t\timagesrc = node.frontmatter.thumbnail.childImageSharp.fluid.src \r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\timagesrc = no_image_thumbnail\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div key={node.id}>\r\n\t\t\t\t\t\t\t\t<img src={imagesrc}></img>\r\n\t\t\t\t\t\t\t\t<Link to={node.fields.slug}>\r\n\t\t\t\t\t\t\t\t\t<h1>{node.frontmatter.title}</h1>\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t<p>{node.frontmatter.date}</p>\r\n\t\t\t\t\t\t\t\t<p>By {node.frontmatter.author}</p>\r\n\t\t\t\t\t\t\t\t<p>Category: {node.frontmatter.category.join(', ')}</p>\r\n\t\t\t\t\t\t\t\t<Link to={node.fields.slug}>View Article</Link>\r\n                <hr />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})}\r\n\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t{Array.from({ length: pageContext.numPages }).map((item, i) => {\r\n\t\t\t\t\t\t\tconst index = i + 1\r\n\t\t\t\t\t\t\tconst link = index === 1 ? '/blog' : `/blog/page/${index}`\r\n\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<li key={index}>\r\n\t\t\t\t\t\t\t\t\t{pageContext.currentPage === index ? (\r\n\t\t\t\t\t\t\t\t\t\t<span>{index}</span>\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<a href={link}>{index}</a>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{/* TODO: Add category & tags */}\r\n        <div className=\"w-full sm:w-1/4 px-10 py-8 bg-gray-300\">\r\n\r\n        </div>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\r\n\t\t</Layout>\r\n\t)\r\n}\r\n\r\nexport default blogTemplate\r\n\r\nblogTemplate.propTypes = {\r\n\t\tpageContext: PropTypes.any,\r\n\t\tdata: PropTypes.any\r\n\t}\r\n\r\n\texport const query = graphql`\r\n\tquery blogList($skip: Int!, $limit: Int!) {\r\n\t\tallMdx(\r\n\t\t\tsort: { fields: [frontmatter___date], order: DESC }\r\n\t\t\tlimit: $limit\r\n\t\t\tskip: $skip\r\n\t\t) {\r\n\t\t\tedges {\r\n\t\t\t\tnode {\r\n\t\t\t\t\tid\r\n\t\t\t\t\tfields {\r\n\t\t\t\t\t\tslug\r\n\t\t\t\t\t\treadingTime {\r\n\t\t\t\t\t\t\t\tminutes\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfrontmatter {\r\n\t\t\t\t\t\ttitle\r\n\t\t\t\t\t\tdate(formatString: \"dddd Do MMMM YYYY\")\r\n\t\t\t\t\t\tauthor\r\n\t\t\t\t\t\tcategory\r\n\t\t\t\t\t\ttag\r\n\t\t\t\t\t\tthumbnail {\r\n\t\t\t\t\t\t\tchildImageSharp {\r\n\t\t\t\t\t\t\t\tfluid {\r\n\t\t\t\t\t\t\t\t\tsrc\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`","module.exports = __webpack_public_path__ + \"static/no_image-24a8b4077774de0801be09b6f77623c4.png\";"],"sourceRoot":""}