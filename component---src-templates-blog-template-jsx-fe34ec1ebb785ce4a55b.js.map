{"version":3,"sources":["webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/core-js/modules/es6.reflect.construct.js","webpack:///./src/components_images/post_background.jsx","webpack:///./src/templates/blogTemplate.jsx","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js"],"names":["MDXRenderer","require","module","$export","create","aFunction","anObject","isObject","fails","bind","rConstruct","Reflect","construct","NEW_TARGET_BUG","F","ARGS_BUG","S","Target","args","newTarget","arguments","length","$args","push","apply","proto","prototype","instance","Object","result","Function","call","BackgroundSection","className","children","query","render","data","imageData","desktop","childImageSharp","fluid","style","height","width","display","blogTemplate","mdx","frontmatter","title","author","date","keywords","body","pageQuery","React","useMDXComponents","useMDXScope","scope","components","props","mdxComponents","mdxScope","End","fullScope","keys","values","key","fn"],"mappings":"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","file":"component---src-templates-blog-template-jsx-fe34ec1ebb785ce4a55b.js","sourcesContent":["/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])\nvar $export = require('./_export');\nvar create = require('./_object-create');\nvar aFunction = require('./_a-function');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar fails = require('./_fails');\nvar bind = require('./_bind');\nvar rConstruct = (require('./_global').Reflect || {}).construct;\n\n// MS Edge supports only 2 arguments and argumentsList argument is optional\n// FF Nightly sets third argument as `new.target`, but does not create `this` from it\nvar NEW_TARGET_BUG = fails(function () {\n  function F() { /* empty */ }\n  return !(rConstruct(function () { /* empty */ }, [], F) instanceof F);\n});\nvar ARGS_BUG = !fails(function () {\n  rConstruct(function () { /* empty */ });\n});\n\n$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {\n  construct: function construct(Target, args /* , newTarget */) {\n    aFunction(Target);\n    anObject(args);\n    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);\n    if (ARGS_BUG && !NEW_TARGET_BUG) return rConstruct(Target, args, newTarget);\n    if (Target == newTarget) {\n      // w/o altered newTarget, optimization for 0-4 arguments\n      switch (args.length) {\n        case 0: return new Target();\n        case 1: return new Target(args[0]);\n        case 2: return new Target(args[0], args[1]);\n        case 3: return new Target(args[0], args[1], args[2]);\n        case 4: return new Target(args[0], args[1], args[2], args[3]);\n      }\n      // w/o altered newTarget, lot of arguments case\n      var $args = [null];\n      $args.push.apply($args, args);\n      return new (bind.apply(Target, $args))();\n    }\n    // with altered newTarget, not support built-in constructors\n    var proto = newTarget.prototype;\n    var instance = create(isObject(proto) ? proto : Object.prototype);\n    var result = Function.apply.call(Target, instance, args);\n    return isObject(result) ? result : instance;\n  }\n});\n","import React from \"react\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\nimport BackgroundImage from 'gatsby-background-image'\r\nimport PropTypes from 'prop-types'\r\n\r\n/*\r\n * This component is built using `gatsby-image` to automatically serve optimized\r\n * images with lazy loading and reduced file sizes. The image is loaded using a\r\n * `useStaticQuery`, which allows us to load the image from directly within this\r\n * component, rather than having to pass the image data down from pages.\r\n *\r\n * For more information, see the docs:\r\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\r\n * - `useStaticQuery`: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nconst BackgroundSection = ({className, children}) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query {\r\n        desktop: file(relativePath: { eq: \"blog_p.jpg\" }) {\r\n          childImageSharp {\r\n            fluid(quality: 100, maxWidth: 1920) {\r\n              ...GatsbyImageSharpFluid_noBase64\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => {\r\n      // Set ImageData.\r\n      const imageData = data.desktop.childImageSharp.fluid\r\n      return (\r\n        <BackgroundImage\r\n        className={className}\r\n        fluid={imageData}\r\n        style={{\r\n          height: `40vh`,\r\n          width: `100%`,\r\n          display: `flex`,\r\n        }}\r\n        >\r\n        <div className=\"full-width\">{children}</div>\r\n        </BackgroundImage>\r\n      )\r\n    }}\r\n  />\r\n)\r\n\r\nBackgroundSection.propTypes = {\r\n  className: PropTypes.string,\r\n  children: PropTypes.node,\r\n}\r\n\r\nexport default BackgroundSection","import React from \"react\"\r\nimport PropTypes from 'prop-types'\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport BackgroundSection from \"../components_images/post_background\"\r\nimport { MDXProvider } from \"@mdx-js/react\"\r\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\r\nimport { graphql } from \"gatsby\"\r\n\r\nexport default function blogTemplate({ data: { mdx } }) {\r\n    const { title, author, date } = mdx.frontmatter\r\n    \r\n    return (\r\n      <Layout>\r\n      <SEO \r\n      title=\"Home\" \r\n      keywords={[\"the university of sheffield\", \"data visualisation\", \"data visualisation hub\", \"research\", \"blog\"]} \r\n      />\r\n      <BackgroundSection className=\"flex flex-wrap justify-center self-center content-center items-center m-auto\">\r\n        <div className=\"text-center\">\r\n          <h1 className=\"text-white text-3xl mt-5\">{title}</h1>\r\n          <h2 className=\"text-white mt-10\">{date}</h2>\r\n          <h2 className=\"text-white\">{author}</h2>\r\n        </div>\r\n      </BackgroundSection>\r\n      \r\n      <div className=\"justify-center container mx-auto py-16 px-8 text-lg\">\r\n        <MDXProvider>\r\n          <MDXRenderer>{mdx.body}</MDXRenderer>\r\n        </MDXProvider>\r\n      </div>\r\n      \r\n\r\n\r\n      </Layout>\r\n    )\r\n}\r\n\r\nblogTemplate.propTypes = {\r\n  data: PropTypes.any,\r\n\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogPostQuery($id: String) {\r\n    mdx(id: { eq: $id }) {\r\n      id\r\n      body\r\n      frontmatter {\r\n        title\r\n        author\r\n        date(formatString: \"dddd Do MMMM YYYY\")\r\n      }\r\n    }\r\n  }\r\n`","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n"],"sourceRoot":""}